// File: EmployeeApp.java

import java.sql.*;
import java.util.*;

// ---------- MODEL ----------
class Employee {
    private int empID;
    private String name;
    private double salary;

    public Employee(int empID, String name, double salary) {
        this.empID = empID;
        this.name = name;
        this.salary = salary;
    }

    public int getEmpID() { return empID; }
    public String getName() { return name; }
    public double getSalary() { return salary; }
}

// ---------- DATABASE CONNECTION ----------
class DBConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/company_db";
    private static final String USER = "root"; // your MySQL username
    private static final String PASS = "your_password"; // your MySQL password

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASS);
    }
}

// ---------- DAO (Data Access Object) ----------
class EmployeeDAO {
    // CREATE
    public void insertEmployee(Employee emp) {
        String query = "INSERT INTO Employee (EmpID, Name, Salary) VALUES (?, ?, ?)";
        try (Connection con = DBConnection.getConnection();
             PreparedStatement ps = con.prepareStatement(query)) {
            ps.setInt(1, emp.getEmpID());
            ps.setString(2, emp.getName());
            ps.setDouble(3, emp.getSalary());
            ps.executeUpdate();
            System.out.println("Employee inserted successfully.");
        } catch (SQLException e) {
            System.out.println("Error inserting employee: " + e.getMessage());
        }
    }

    // READ
    public void getAllEmployees() {
        String query = "SELECT * FROM Employee";
        try (Connection con = DBConnection.getConnection();
             Statement st = con.createStatement();
             ResultSet rs = st.executeQuery(query)) {
            System.out.println("\n--- Employee Records ---");
            while (rs.next()) {
                System.out.printf("EmpID: %d, Name: %s, Salary: %.2f%n",
                        rs.getInt("EmpID"), rs.getString("Name"), rs.getDouble("Salary"));
            }
        } catch (SQLException e) {
            System.out.println("Error fetching employees: " + e.getMessage());
        }
    }

    // UPDATE
    public void updateSalary(int empID, double newSalary) {
        String query = "UPDATE Employee SET Salary = ? WHERE EmpID = ?";
        try (Connection con = DBConnection.getConnection();
             PreparedStatement ps = con.prepareStatement(query)) {
            ps.setDouble(1, newSalary);
            ps.setInt(2, empID);
            int rows = ps.executeUpdate();
            if (rows > 0)
                System.out.println("Salary updated successfully.");
            else
                System.out.println("No employee found with that ID.");
        } catch (SQLException e) {
            System.out.println("Error updating salary: " + e.getMessage());
        }
    }

    // DELETE
    public void deleteEmployee(int empID) {
        String query = "DELETE FROM Employee WHERE EmpID = ?";
        try (Connection con = DBConnection.getConnection();
             PreparedStatement ps = con.prepareStatement(query)) {
            ps.setInt(1, empID);
            int rows = ps.executeUpdate();
            if (rows > 0)
                System.out.println("Employee deleted successfully.");
            else
                System.out.println("No employee found with that ID.");
        } catch (SQLException e) {
            System.out.println("Error deleting employee: " + e.getMessage());
        }
    }
}

// ---------- CONTROLLER ----------
class EmployeeController {
    private EmployeeDAO dao = new EmployeeDAO();

    public void addEmployee(Employee emp) {
        dao.insertEmployee(emp);
    }

    public void viewAllEmployees() {
        dao.getAllEmployees();
    }

    public void changeSalary(int id, double salary) {
        dao.updateSalary(id, salary);
    }

    public void removeEmployee(int id) {
        dao.deleteEmployee(id);
    }
}

// ---------- VIEW (Main Program) ----------
public class EmployeeApp {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        EmployeeController controller = new EmployeeController();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // Load JDBC driver
            System.out.println("JDBC Driver Loaded Successfully.");

            while (true) {
                System.out.println("\n====== Employee Management System ======");
                System.out.println("1. Add Employee");
                System.out.println("2. View All Employees");
                System.out.println("3. Update Salary");
                System.out.println("4. Delete Employee");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
                int choice = sc.nextInt();

                switch (choice) {
                    case 1:
                        System.out.print("Enter EmpID: ");
                        int id = sc.nextInt();
                        sc.nextLine();
                        System.out.print("Enter Name: ");
                        String name = sc.nextLine();
                        System.out.print("Enter Salary: ");
                        double salary = sc.nextDouble();
                        controller.addEmployee(new Employee(id, name, salary));
                        break;

                    case 2:
                        controller.viewAllEmployees();
                        break;

                    case 3:
                        System.out.print("Enter EmpID: ");
                        int empIdToUpdate = sc.nextInt();
                        System.out.print("Enter New Salary: ");
                        double newSalary = sc.nextDouble();
                        controller.changeSalary(empIdToUpdate, newSalary);
                        break;

                    case 4:
                        System.out.print("Enter EmpID to delete: ");
                        int empIdToDelete = sc.nextInt();
                        controller.removeEmployee(empIdToDelete);
                        break;

                    case 5:
                        System.out.println("Exiting program. Goodbye!");
                        sc.close();
                        return;

                    default:
                        System.out.println("Invalid choice. Please try again.");
                }
            }
        } catch (ClassNotFoundException e) {
            System.out.println("JDBC Driver not found.");
        }
    }
}
